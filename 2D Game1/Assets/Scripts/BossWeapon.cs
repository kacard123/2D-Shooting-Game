using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public enum AttackType { CircleFire = 0, }

public class BossWeapon : MonoBehaviour
{
    [SerializeField]
    private GameObject bossWeaponPrefab; // ?????? ?? ???????? ?????? ??????

    public void StartFiring(AttackType attackType)
    {
        // attackType ???????? ?????? ???? ???????? ????
        StartCoroutine(attackType.ToString());
    }

    public void StopFiring(AttackType attackType)
    {
        // attackType ???????? ?????? ???? ???????? ????
        StopCoroutine(attackType.ToString());
    }

    private IEnumerator CircleFire()
    {
        float attackRate = 0.5f; // ???? ????
        int count = 30; // ?????? ???? ????
        float intervalAngle = 360 / count; // ?????? ?????? ????
        float weightAngle = 0; // ???????? ????(???? ???? ?????? ???????? ?????? ????)

        // 원 형태 방사
        while (true)
        {
            for(int i = 0; i < count; ++ i)
            {
                // ?????? ????
                GameObject clone = Instantiate(bossWeaponPrefab, transform.position, Quaternion.identity);
                // ?????? ???? ????(????)
                float angle = weightAngle + intervalAngle * i;
                // ?????? ???? ????(????)
                float x = Mathf.Cos(angle * Mathf.PI / 180.0f);
                // Cos(????), ?????? ?????? ???? ?????? ???? PI / 180?? ????
                float y = Mathf.Sin(angle * Mathf.PI / 180.0f);
                // Sin(????), ?????? ?????? ???? ?????? ???? PI / 180?? ????
                clone.GetComponent<Movement2D>().MoveTo(new Vector2(x, y));
            }

            // ???????? ???????? ???? ???? ?????? ???? ????
            weightAngle += 1;

            // attackRate ???????? ????
            yield return new WaitForSeconds(attackRate);
        }
    }

    private IEnumerator FireToPlaeyr()
    {
        // 목표 = 중앙
        Vector3 targetPos = Vector3.zero;
        float attackRate = 0.1f;

        while(true)
        {
            // 발사체 생성
            GameObject clone = Instantiate(bossWeaponPrefab, transform.position, Quaternion.identity);
            // 발사체 이동방향
            Vector3 direction = (targetPos - clone.transform.position).normalized;
            // 발사체 이동방향 설정
            clone.GetComponent<Movement2D>().MoveTo(direction);
            // attackRate시간 만큼 대기
            yield return new WaitForSeconds(attackRate);
        }
    }

    public void OnDie()
    {
        // 보스 오브젝트 삭제
        Destroy(gameObject);
    }

}
